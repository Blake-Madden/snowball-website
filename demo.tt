[% header %]

<noscript>
<div class="alert alert-warning">
Sorry, this demo requires Javascript to function.
</div>
</noscript>

<p>
Try the
[% stemmer_select %]
stemming algorithm:
</p>
<table border='0'><tr><td width="50%">
<textarea id="words" rows="1" cols="50" placeholder="Enter some English text" oninput="stem_demo(this);">
</textarea>
</td>
<td id="results" class="license" style='border:1px;border-style:solid;'></td>
</tr></table>

<p>
This demo performs stemming entirely within your browser, using Javascript code generated by the Snowball compiler.
</p>

[% FOREACH js IN stemmer_js_files %]
<script language="javascript" src="[% js %]"></script>
[% END %]
<script>
var old_words;
function stem_demo(elt) {
  var words = elt.value;
  if (words === old_words) return;
  old_words = words;
  // Auto-expand height of the textarea
  var lines = 1;
  words.replace(/\n/g, function(){++lines;});
  elt.rows = lines;
  var lang = document.getElementById('lang').value;
  if (lang.search(/[^-A-Za-z0-9_]/) >= 0) return;
  lang = lang.replace('_', '');
  lang += "Stemmer";
  alert(lang);
  var s = eval("new "+lang+"()");
  var result = '';
  var i = 0;
  for (const m of words.matchAll(/([[% word_regexp %]']+)/ug)) {
    result += words.substring(i, m.index).replace(/[ &<>\n]/g, function(c){
        if (c === ' ') return '&nbsp;';
        if (c === '<') return '&lt;';
        if (c === '>') return '&gt;';
        if (c === '&') return '&amp;';
        // Zero width space means a trailing newline will get rendered.
        return '<br>&#8203;';
    });
    const w = m[0];
    result += '<span style="background-color:#dfd" title="' + lang + '(' + w + ')">' + s.stemWord(w.toLowerCase()) + '</span>';
    i = m.index + w.length;
  }
  document.getElementById('results').innerHTML = result;
}
function lang_changed(elt) {
    old_words = undefined;
    var lang = elt.value;
    var words_elt = document.getElementById('words');
    var results_elt = document.getElementById('results');
    if (lang === 'Arabic' || lang === 'Yiddish') {
        words_elt.dir = results_elt.dir = 'rtl';
    } else {
        words_elt.dir = results_elt.dir = 'ltr';
	if (lang === 'Porter') lang = 'English';
	else if (lang === 'Dutch_porter') lang = 'Dutch';
    }
    words_elt.placeholder = "Enter some " + lang + " text";
    var code = '';
    switch (lang) {
        case 'Arabic': code = 'ar'; break;
        case 'Armenian': code = 'hy'; break;
        case 'Basque': code = 'eu'; break;
        case 'Catalan': code = 'ca'; break;
        case 'Danish': code = 'da'; break;
        case 'Dutch': code = 'nl'; break;
        case 'English': code = 'en'; break;
        case 'Esperanto': code = 'eo'; break;
        case 'Estonian': code = 'et'; break;
        case 'Finnish': code = 'fi'; break;
        case 'French': code = 'fr'; break;
        case 'German': code = 'de'; break;
        case 'Greek': code = 'el'; break;
        case 'Hindi': code = 'hi'; break;
        case 'Hungarian': code = 'hu'; break;
        case 'Indonesian': code = 'id'; break;
        case 'Irish': code = 'ga'; break;
        case 'Italian': code = 'it'; break;
        case 'Lithuanian': code = 'lt'; break;
        case 'Nepali': code = 'ne'; break;
        case 'Norwegian': code = 'no'; break;
        case 'Portuguese': code = 'pt'; break;
        case 'Romanian': code = 'ro'; break;
        case 'Russian': code = 'ru'; break;
        case 'Serbian': code = 'sr'; break;
        case 'Spanish': code = 'es'; break;
        case 'Swedish': code = 'sv'; break;
        case 'Tamil': code = 'ta'; break;
        case 'Turkish': code = 'tr'; break;
        case 'Yiddish': code = 'yi'; break;
    }
    words_elt.lang = code;
    stem_demo(document.getElementById('words'));
}
window.onload = function() {
    let d=location.hash;
    if (d.length) {
        let c=null;
        let s=document.getElementById('lang');
        let a=(s.selectedIndex>=0?s.options[s.selectedIndex]:null);
        d = d.substring(1);
        for (let i=0; i<s.options.length; i++) {
            let e = s.options[i];
            if (e.getAttribute("value") === d) c = e;
        }
        if (c !== null && c !== a) {
            if (a !== null) a.removeAttribute("selected");
            c.setAttribute("selected", "");
            s.onchange();
        }
    }
    let t=(new URLSearchParams(location.search.substring(1))).get("text");
    if (t !== null) {
	let s=document.getElementById('words');
	s.value=t;
	stem_demo(s);
    }
}
</script>

[% footer %]
